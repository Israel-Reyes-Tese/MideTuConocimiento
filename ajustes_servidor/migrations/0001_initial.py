# Generated by Django 4.2.15 on 2024-08-19 18:12

import ajustes_servidor.models
import ajustes_servidor.opciones_models.opciones_models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('imagen_perfil', models.ImageField(blank=True, default='static/img/user/default.png', null=True, upload_to=ajustes_servidor.opciones_models.opciones_models.guardar_imagen)),
                ('contenido_adulto', models.BooleanField(default=False)),
                ('idioma', models.CharField(blank=True, choices=[('America', (('brazilian_portuguese', 'Portugués brasileño'), ('canadian_french', 'Francés canadiense'), ('english', 'Inglés'), ('french_creole', 'Criollo francés'), ('haitian_creole', 'Criollo haitiano'), ('navajo', 'Navajo'), ('quechua', 'Quechua'), ('spanish', 'Español'))), ('Western Europe', (('catalan', 'Catalán'), ('danish', 'Danés'), ('dutch', 'Holandés'), ('faroese', 'Feroés'), ('finnish', 'Finlandés'), ('flemish', 'Flamenco'), ('french', 'Francés'), ('german', 'Alemán'), ('greek', 'Griego'), ('icelandic', 'Islandés'), ('italian', 'Italiano'), ('norwegian', 'Noruego'), ('portuguese', 'Portugués'), ('spanish', 'Español'), ('swedish', 'Sueco'), ('uk_english', 'Inglés británico / Inglés británico'))), ('Central & Eastern Europe', (('belarusian', 'Bielorruso'), ('bosnian', 'Bosnio'), ('bulgarian', 'Búlgaro'), ('croatian', 'Croata'), ('czech', 'Checo'), ('estonian', 'Estonio'), ('hungarian', 'Húngaro'), ('latvian', 'Letón'), ('lithuanian', 'Lituano'), ('macedonian', 'Macedonio'), ('polish', 'Polaco'), ('romanian', 'Rumano'), ('russian', 'Ruso'), ('serbian', 'Serbio'), ('slovak', 'Eslovaco'), ('slovenian', 'Esloveno'), ('turkish', 'Turco'), ('ukrainian', 'Ucraniano'))), ('Africa', (('amharic', 'Amárico (Etiopía)'), ('dinka', 'Dinka (Sudán)'), ('ibo', 'Ibo (Nigeria)'), ('kirundi', 'Kirundi'), ('mandinka', 'Mandinka'), ('nuer', 'Nuer (Nilo-Sahariano)'), ('oromo', 'Oromo (Etiopía)'), ('kinyarwanda', 'Kinyarwanda'), ('shona', 'Shona (Zimbabue)'), ('somali', 'Somalí'), ('swahili', 'Suajili'), ('tigrigna', 'Tigrigna (Etiopía)'), ('wolof', 'Wolof'), ('xhosa', 'Xhosa'), ('yoruba', 'Yoruba'), ('zulu', 'Zulú'))), ('Middle East', (('arabic', 'Árabe'), ('dari', 'Dari'), ('farsi', 'Persa'), ('hebrew', 'Hebreo'), ('kurdish', 'Kurdo'), ('pashtu', 'Pastún'), ('punjabi', 'Punyabí'), ('urdu_pakistan', 'Urdu (Pakistán)'))), ('Central Asia', (('armenian', 'Armenio'), ('azerbaijani', 'Azerbaiyano'), ('georgian', 'Georgiano'), ('kazakh', 'Kazajo'), ('mongolian', 'Mongol'), ('turkmen', 'Turcomano'), ('uzbek', 'Uzbeko'))), ('Southeast Asia', (('bengali', 'Bengalí'), ('cham', 'Cham'), ('chamorro_guam', 'Chamorro (Guam)'), ('gujarati_india', 'Guyaratí (India)'), ('hindi', 'Hindi'), ('indonesian', 'Indonesio'), ('khmer_cambodia', 'Jemer (Camboya)'), ('kmhmu_laos', 'Kmhmu (Laos)*'), ('korean', 'Coreano'), ('laotian', 'Laosiano'), ('malayalam', 'Malayalam'), ('malay', 'Malayo'), ('marathi_india', 'Marathi (India)'), ('marshallese', 'Marshalés'), ('nepali', 'Nepalí'), ('sherpa', 'Sherpa*'), ('tamil', 'Tamil'), ('thai', 'Tailandés'), ('tibetan', 'Tibetano'), ('trukese_micronesia', 'Trukés (Micronesia)'), ('vietnamese', 'Vietnamita'))), ('Far East', (('amoy', 'Amoy'), ('burmese', 'Birmano'), ('cantonese', 'Cantonés'), ('chinese', 'Chino'), ('chinese_simplified', 'Chino Simplificado'), ('chinese_traditional', 'Chino Tradicional'), ('chiu_chow', 'Chiu Chow'), ('chow_jo', 'Chow Jo'), ('fukienese', 'Fukienese'), ('hakka_china', 'Hakka (China)'), ('hmong', 'Hmong'), ('hainanese', 'Hainanés'), ('japanese', 'Japonés'), ('mandarin', 'Mandarín'), ('mien', 'Mien'), ('shanghainese', 'Shanghainés*'), ('taiwanese', 'Taiwanés'), ('taishanese', 'Taishanés'))), ('South Pacific', (('fijian', 'Fiyiano'), ('palauan', 'Palauano*'), ('samoan', 'Samoano'), ('tongan', 'Tongano'))), ('Philippines', (('bikol', 'Bicol'), ('cebuano', 'Cebuano'), ('ilocano', 'Ilocano'), ('ilongo', 'Ilonggo'), ('pampangan', 'Pampango'), ('pangasinan', 'Pangasinán'), ('tagalog', 'Tagalo'), ('visayan', 'Visayan'))), ('Idiomas y Servicios Adicionales', (('american_sign_language', 'Lenguaje de Señas Estadounidense'), ('braille', 'Braille'), ('esperanto', 'Esperanto'), ('latin', 'Latín'), ('phonetic', 'Fonético'), ('real_time_captioning', 'Subtitulación en tiempo real y remota'), ('tactile', 'Táctil'), ('limited_resources', 'Recursos Limitados Disponibles')))], default='spanish', max_length=300)),
                ('comentarios', models.BooleanField(default=True)),
                ('nivel_usuario', models.CharField(blank=True, choices=[('Nivel 1', (('Invitado', 'Invitado'),)), ('Nivel 2', (('Registrado', 'Registrado'),)), ('Nivel 3', (('Colaborador', 'Colaborador'),)), ('Sin nivel', 'Sin nivel')], default='Registrado', max_length=300)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP del usuario')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', ajustes_servidor.models.CustomUserManager()),
            ],
        ),
    ]
